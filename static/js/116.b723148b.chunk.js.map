{"version":3,"file":"static/js/116.b723148b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 20px;\n`;\nexport const SpanName = styled.span`\n  font-size: 20px;\n  font-weight: 500;\n  font-style: italic;\n`;\n\nexport const SpanNumber = styled.span`\n  margin-left: 7px;\n  font-size: 20px;\n  font-style: italic;\n`;\nexport const ButtonDelete = styled.button`\n  color: white;\n  width: 100px;\n  margin-left: 7px;\n  font-size: 15px;\n  font-weight: bold;\n  background-color: transparent;\n  border-radius: 10px;\n  cursor: pointer;\n  background-color: #7703fc;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectFilterContacts,\n} from 'redux/selectors';\nimport { List, SpanName, SpanNumber, ButtonDelete } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilterContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  if (!filterContacts?.length) {\n    return <p>No contacts found.</p>;\n  }\n\n  return (\n    <>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n      <List>\n        {filterContacts.map(contact => {\n          return (\n            <li key={contact.id}>\n              <SpanName>{contact.name}:</SpanName>\n              <SpanNumber>{contact.number}</SpanNumber>\n              <ButtonDelete\n                type=\"button\"\n                onClick={() => onDeleteContact(contact.id)}\n              >\n                Delete\n              </ButtonDelete>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { ErrorMessage, Form } from 'formik';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: 500;\n  font-style: italic;\n  width: 300px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nexport const AddButton = styled.button`\n  padding: 10px 20px;\n  background-color: #7703fc;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 20px;\n  width: 150px;\n`;\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport {\n  AddButton,\n  StyledForm,\n  StyledLabel,\n  ErrorMsg,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst quizSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(7, 'At least 5 digits')\n    .max(20, 'Too Long!')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, actions) => {\n    const newContact = {\n      id: nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      return alert(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={quizSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <StyledLabel>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMsg type=\"text\" name=\"name\" component=\"div\" />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMsg type=\"tel\" name=\"number\" component=\"div\" />\n        </StyledLabel>\n\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  font-style: italic;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const FilterInput = styled.input`\n  width: 300px;\n`;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <br />\n      <FilterInput\n        type=\"text\"\n        onChange={event => dispatch(setFilter(event.target.value.trim()))}\n        value={filter}\n        name=\"filter\"\n        id=\"filter\"\n      />\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  padding-left: 15px;\n  padding-top: 15px;\n  background-repeat: no-repeat;\n  height: 100vh;\n  background-size: cover;\n  background-image: url('https://mir-oboev.ua/image/cache/catalog/oboi/3831-81-1000x1000.jpg');\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { ContactsWrapper } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsWrapper>\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && 'Request in progress...'}\n      <ContactList />\n    </ContactsWrapper>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilterContacts","createSelector","_ref","name","toLowerCase","includes","List","styled","_templateObject","_taggedTemplateLiteral","SpanName","_templateObject2","SpanNumber","_templateObject3","ButtonDelete","_templateObject4","ContactList","filterContacts","useSelector","dispatch","useDispatch","useEffect","fetchContacts","length","_jsxs","_Fragment","children","_jsx","map","contact","number","type","onClick","id","deleteContact","StyledLabel","StyledForm","Form","AddButton","ErrorMsg","ErrorMessage","quizSchema","Yup","shape","min","max","required","ContactForm","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","nanoid","find","alert","concat","addContact","resetForm","Field","component","FilterLabel","FilterInput","Filter","onChange","event","setFilter","target","value","trim","ContactsWrapper","Contacts"],"sourceRoot":""}